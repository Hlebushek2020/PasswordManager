<Application x:Class="PasswordManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PasswordManager"
             Startup="Application_Startup">
    <Application.Resources>
        <!-- SCROLL BAR STYLE -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle RadiusX="5" RadiusY="5" Fill="{Binding UpdateSourceTrigger=PropertyChanged, Path=ScrollBarBrush}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Track Name="PART_Track" Width="10" IsDirectionReversed="True" HorizontalAlignment="Right">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Track Name="PART_Track" Height="10" VerticalAlignment="Bottom" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition x:Name="ScrollColumn" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition x:Name="ScrollRow" Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" SnapsToDevicePixels="True" OverridesDefaultStyle="True" AutomationProperties.AutomationId="VerticalScrollBar" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Template="{DynamicResource VerticalScrollBar}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="1" SnapsToDevicePixels="True" OverridesDefaultStyle="True" AutomationProperties.AutomationId="HorizontalScrollBar" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Template="{DynamicResource HorizontalScrollBar}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="VerticalScrollBarVisibility" Value="Disabled">
                                <Setter TargetName="ScrollColumn" Property="Width" Value="0" />
                            </Trigger>
                            <Trigger Property="HorizontalScrollBarVisibility" Value="Disabled">
                                <Setter TargetName="ScrollRow" Property="Height" Value="0" />
                            </Trigger>
                            <Trigger Property="VerticalScrollBarVisibility" Value="Hidden">
                                <Setter TargetName="ScrollColumn" Property="Width" Value="0" />
                            </Trigger>
                            <Trigger Property="HorizontalScrollBarVisibility" Value="Hidden">
                                <Setter TargetName="ScrollRow" Property="Height" Value="0" />
                            </Trigger>
                            <Trigger Property="VerticalScrollBarVisibility" Value="Visible">
                                <Setter TargetName="ScrollColumn" Property="Width" Value="Auto" />
                            </Trigger>
                            <Trigger Property="HorizontalScrollBarVisibility" Value="Visible">
                                <Setter TargetName="ScrollRow" Property="Height" Value="Auto" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="IsEnabled" TargetName="PART_ScrollContentPresenter" Value="False"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- TEXTBOX STYLE -->
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Width" Value="600"/>
            <Setter Property="MaxLength" Value="50"/>
            <Setter Property="Background" Value="{Binding Path=ElementBackground, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Foreground" Value="{Binding Path=TextBrush, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Border" CornerRadius="3" Padding="3" BorderThickness="0" Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- BUTTON MENU STYLE -->
        <Style x:Key="ButtonMenuStyle" TargetType="Button">
            <Setter Property="FontSize" Value="34"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="{Binding Path=MenuBackground, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Foreground" Value="{Binding Path=TextBrush, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{Binding Path=MenuBackgroundMouseOver, UpdateSourceTrigger=PropertyChanged}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{Binding Path=MenuBackgroundPressed, UpdateSourceTrigger=PropertyChanged}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- BUTTON SMALL MENU STYLE -->
        <Style x:Key="ButtonSmallMenuStyle" TargetType="Button">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Background" Value="{Binding Path=MenuBackground, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Foreground" Value="{Binding Path=TextBrush, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" BorderThickness="0" CornerRadius="3" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{Binding Path=MenuBackgroundMouseOver, UpdateSourceTrigger=PropertyChanged}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{Binding Path=MenuBackgroundPressed, UpdateSourceTrigger=PropertyChanged}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- LISTBOX STYLE -->
        <Style x:Key="ListBoxStyle" TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="Background" Value="{Binding Path=ElementBackground, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Foreground" Value="{Binding Path=TextBrush, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="0" CornerRadius="3" Padding="3" Background="{TemplateBinding Background}">
                            <ScrollViewer Focusable="false">
                                <StackPanel IsItemsHost="True" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- PROGRESSBAR STYLE -->
        <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
            <Setter Property="Foreground" Value="{Binding UpdateSourceTrigger=PropertyChanged, Path=ProgressBarBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{Binding UpdateSourceTrigger=PropertyChanged, Path=ProgressBarBrush}"/>
            <Setter Property="Height" Value="20"/>
        </Style>
        <!-- BASE TEXTBLOCK STYLE -->
        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Foreground" Value="{Binding Path=TextBrush, UpdateSourceTrigger=PropertyChanged}"/>
        </Style>
    </Application.Resources>
</Application>
